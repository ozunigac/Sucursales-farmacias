/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica7;

import Clases.Conexion;
import Clases.Empleado;
import java.util.Arrays;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author DELL
 */
public class GestionEmpleados extends javax.swing.JFrame {
    Conexion cliente;
    private int columnas=6;
    private String[] columna; // columnas de la tabla
    private DefaultTableModel model_corte; // modelo de la tabla
    Empleado empleado;
    
    public GestionEmpleados(Conexion cli,Empleado emp) {
        cliente = cli;
        empleado=emp;
        model_corte = new DefaultTableModel(null,getColumnas()){ // inicializar el modelo de la tabla
            @Override
            public boolean isCellEditable(int fila, int columna) {
                return false;
            }
        };
        initComponents();        
        this.setLocationRelativeTo(null);
        this.setTitle("Empleados registrados");
        tablaEmpleados.getTableHeader().setReorderingAllowed(false); //evitar que las columnas se editen
        this.setLocationRelativeTo(null); // centrar frame
        //llenar la tabla con todos los registros de la sucursal
        //LlenarTable("select (idUsuario,nombre,apellidoPaterno,apellidoMaterno,direccion,idRol) from usuarios");
        if(empleado.getIdRol()==1)
            LlenarTable("select (usuarios.idUsuario,usuarios.nombreUsuario,usuarios.apellidoPaterno,usuarios.apellidoMaterno,"
                + "usuarios.direccionUsuario,roles.nombreRol) from usuarios inner join roles on usuarios.idRolFK=roles.idRol");
        else 
            LlenarTable("select (usuarios.idUsuario,usuarios.nombreUsuario,usuarios.apellidoPaterno,usuarios.apellidoMaterno,"
                + "usuarios.direccionUsuario,roles.nombreRol) from usuarios inner join roles on usuarios.idRolFK=roles.idRol where (usuarios.idRolFK=2)");
    }
    
    private String[] getColumnas(){ // columnas para la tabla
        return columna =  new String[]{"Clave","Nombre","A. Paterno","A. Materno","Direccion","Rol"};
    }
    
    
    private void LlenarTable(String query){
        for (int i = (model_corte.getRowCount() - 1); i >= 0; i--) // limpiamos tabla
            model_corte.removeRow(i);
//        28ae5f6449
        TableRowSorter<TableModel> orden = new TableRowSorter<TableModel>((DefaultTableModel)tablaEmpleados.getModel()); // modelo para la tabla
        tablaEmpleados.setRowSorter(orden); // add el ordenamiento
        String [][] res=cliente.consultaSelect(query);
        // recorremos el resultado de la ocnsulta
        for(int j=1;j<res.length;j++){
            model_corte.addRow(res[j]); // add a el modelo de l atabla
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        BtnAlta = new javax.swing.JButton();
        BtnBorrar = new javax.swing.JButton();
        BtnEditar = new javax.swing.JButton();
        BtnSalirE = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Gestion de Empleados");

        tablaEmpleados.setModel(model_corte);
        jScrollPane1.setViewportView(tablaEmpleados);

        BtnAlta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/plus (1).png"))); // NOI18N
        BtnAlta.setText("Alta");
        BtnAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAltaActionPerformed(evt);
            }
        });

        BtnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/eraser.png"))); // NOI18N
        BtnBorrar.setText("Borrar");
        BtnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBorrarActionPerformed(evt);
            }
        });

        BtnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/pencil.png"))); // NOI18N
        BtnEditar.setText("Editar");
        BtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditarActionPerformed(evt);
            }
        });

        BtnSalirE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/error.png"))); // NOI18N
        BtnSalirE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirEActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/employee.png"))); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/house (3).png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/back (1).png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(BtnAlta)
                .addGap(112, 112, 112)
                .addComponent(BtnBorrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnEditar)
                .addGap(66, 66, 66))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(280, 280, 280)
                        .addComponent(BtnSalirE, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addGap(180, 180, 180))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnSalirE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnAlta)
                    .addComponent(BtnBorrar)
                    .addComponent(BtnEditar))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAltaActionPerformed
        AltaEmpleado ob = new AltaEmpleado(cliente,1,empleado);
        ob.setVisible(true);// TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_BtnAltaActionPerformed

    //boton de borrar empleado
    private void BtnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBorrarActionPerformed
        //comprobamos que este seleccionando un usuario
        int row = tablaEmpleados.getSelectedRow();
        if(row==-1){
            JOptionPane.showMessageDialog(null, "Seleccione un registro.", "Error", ERROR_MESSAGE);
        }else{
            //preguntamos si quiere eliminar el usuario
            if(JOptionPane.showConfirmDialog(null, "Eliminar usuario?", "Confirmar",1)==0){
                //preguntamos si esta seguro de hacer la eliminacion e la tabla
                if(JOptionPane.showConfirmDialog(null, "Estas seguro de eliminar el usuario?", "Confirmar",1)==0){
                    //obtenemos el id del usuario
                    int clave=Integer.parseInt(tablaEmpleados.getValueAt(row, 0).toString());
                    //mandamos la consulta para eliminarlo
                    String respuesta = cliente.consultaInsert("delete from usuarios where (idUsuario="+clave+")");
                    if(respuesta.equalsIgnoreCase("Exito")){
                        //actualizamos la pantalla
                        actualizarPantalla();
                    }
                }
            }
        }
    }//GEN-LAST:event_BtnBorrarActionPerformed
    //actualizamos la ventana actual, cuando se haga un cambio
    public void actualizarPantalla(){
        this.setVisible(false);
        GestionEmpleados asd = new GestionEmpleados(cliente,empleado);
        asd.setVisible(true);
        this.dispose();
    }
    
    private void BtnSalirEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirEActionPerformed
       System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_BtnSalirEActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MenuPrincipal ee = new MenuPrincipal(cliente,empleado);
        ee.setVisible(true);        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           MenuPrincipal bb = new MenuPrincipal(cliente,empleado);
           bb.setVisible(true);
           this.setVisible(false);
           this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditarActionPerformed
        int row = tablaEmpleados.getSelectedRow();
        //comprobamos que este seleccionando un usuario en la tabla
        if(row==-1){
            JOptionPane.showMessageDialog(null, "Seleccione un registro.", "Error", ERROR_MESSAGE);
        }else{
            //obtenemos el id del usuario
            int clave=Integer.parseInt(tablaEmpleados.getValueAt(row, 0).toString());
            String[][] emp = cliente.consultaSelect("select * from usuarios where (idUsuario="+clave+")");
            int i=Integer.parseInt(emp[1][0]);
            //hacemos un objeto tipo empleado y lo mandamos a otra interfaz para llenar el formulario
            Empleado empleado = new Empleado(Integer.parseInt(emp[1][0]),emp[1][1],emp[1][2],emp[1][3],emp[1][4],emp[1][5],emp[1][6],Integer.parseInt(emp[1][7]));
            AltaEmpleado alta = new AltaEmpleado(cliente,2,empleado);
            alta.setVisible(true);
            this.setVisible(false);
            this.dispose();
        }
    }//GEN-LAST:event_BtnEditarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAlta;
    private javax.swing.JButton BtnBorrar;
    private javax.swing.JButton BtnEditar;
    private javax.swing.JButton BtnSalirE;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaEmpleados;
    // End of variables declaration//GEN-END:variables
}
